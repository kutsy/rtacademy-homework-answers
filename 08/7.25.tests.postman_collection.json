{
	"info": {
		"_postman_id": "b417773c-0c88-4530-b217-48088eedcd1d",
		"name": "RTAcademy - 7.25",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET /",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonbody = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Check fields\", function () {",
							"    pm.expect(jsonbody.status).to.eql(200);",
							"    pm.expect(jsonbody.data).to.be.an('array');",
							"    console.log(\"тип поля 'data': \" + typeof jsonbody.data);",
							"});",
							"",
							"let id = jsonbody.data[0].id;",
							"pm.environment.set(\"id\", id);",
							"console.log(\"id першого запису: \" + id);",
							"",
							"let category = jsonbody.data;",
							"let lastItem = category[category.length - 1];",
							"let lastId = lastItem.id;",
							"pm.environment.set(\"lastId\", lastId);",
							"console.log(\"id останнього запису: \" + lastId);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/07/25/blog/api/category.php",
					"host": [
						"{{host}}"
					],
					"path": [
						"07",
						"25",
						"blog",
						"api",
						"category.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /{{id}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonbody = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Check fields\", function () {",
							"    pm.expect(jsonbody.status).to.eql(200);",
							"    pm.expect(jsonbody.data).to.be.an('object');",
							"    console.log(typeof jsonbody.data);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/07/25/blog/api/category.php?id={{id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"07",
						"25",
						"blog",
						"api",
						"category.php"
					],
					"query": [
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /{{lastId}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonbody = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Check fields\", function () {",
							"    pm.expect(jsonbody.status).to.eql(200);",
							"    pm.expect(jsonbody.data).to.be.an('object');",
							"    console.log(typeof jsonbody.data);",
							"});",
							"",
							"pm.test(\"Check fields in data\", function () {",
							"    pm.expect(jsonbody.data.id).to.be.an('number');",
							"    pm.expect(jsonbody.data.title).to.be.an('string');",
							"    pm.expect(jsonbody.data.alias).to.be.an('string');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/07/25/blog/api/category.php?id={{lastId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"07",
						"25",
						"blog",
						"api",
						"category.php"
					],
					"query": [
						{
							"key": "id",
							"value": "{{lastId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let title = \"Категорія\" + \" \" + parseInt(new Date().getTime()/10);",
							"pm.environment.set( \"title\", title );",
							"",
							"console.log(title);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"let jsonbody = pm.response.json();",
							"",
							"let idForEdit = jsonbody.data.id;",
							"pm.environment.set(\"idForEdit\", idForEdit);",
							"console.log(idForEdit);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "title",
							"value": "{{title}}",
							"type": "text"
						},
						{
							"key": "alias",
							"value": "{{$timestamp}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/07/25/blog/api/category.php",
					"host": [
						"{{host}}"
					],
					"path": [
						"07",
						"25",
						"blog",
						"api",
						"category.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT /100500",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"let jsonbody = pm.response.json();",
							"",
							"pm.test(\"Check fields\", function () {",
							"    pm.expect(jsonbody.status).to.eql(404);",
							"    pm.expect(jsonbody.error).to.eql(\"Категорії з таким ID не існує\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "title",
							"value": "Test12345ab",
							"type": "text"
						},
						{
							"key": "alias",
							"value": "test12345a",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/07/25/blog/api/category.php?id={{$timestamp}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"07",
						"25",
						"blog",
						"api",
						"category.php"
					],
					"query": [
						{
							"key": "id",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT /{{idForEdit}}",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let newTitle = \"Змінено\" + \" \" + parseInt(new Date().getTime()/10);",
							"pm.environment.set( \"newTitle\", newTitle );"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "title",
							"value": "{{newTitle}}",
							"type": "text"
						},
						{
							"key": "alias",
							"value": "{{$timestamp}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/07/25/blog/api/category.php?id={{idForEdit}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"07",
						"25",
						"blog",
						"api",
						"category.php"
					],
					"query": [
						{
							"key": "id",
							"value": "{{idForEdit}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /{{idForEdit}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{host}}/07/25/blog/api/category.php?id={{idForEdit}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"07",
						"25",
						"blog",
						"api",
						"category.php"
					],
					"query": [
						{
							"key": "id",
							"value": "{{idForEdit}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /100500",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"let jsonbody = pm.response.json();",
							"",
							"pm.test(\"Check fields\", function () {",
							"    pm.expect(jsonbody.status).to.eql(404);",
							"    pm.expect(jsonbody.error).to.eql(\"Категорії з таким ID не існує\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{host}}/07/25/blog/api/category.php?id={{$timestamp}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"07",
						"25",
						"blog",
						"api",
						"category.php"
					],
					"query": [
						{
							"key": "id",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		}
	]
}